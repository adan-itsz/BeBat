{
  "_args": [
    [
      {
        "raw": "react-swipeable@^4.0.0",
        "scope": null,
        "escapedName": "react-swipeable",
        "name": "react-swipeable",
        "rawSpec": "^4.0.0",
        "spec": ">=4.0.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\Greye\\Desktop\\Proyecto\\beBat\\node_modules\\react-image-gallery"
    ]
  ],
  "_from": "react-swipeable@>=4.0.0 <5.0.0",
  "_id": "react-swipeable@4.0.1",
  "_inCache": true,
  "_location": "/react-swipeable",
  "_nodeVersion": "6.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-swipeable-4.0.1.tgz_1496875252892_0.6130839134566486"
  },
  "_npmUser": {
    "name": "hartzis",
    "email": "brianhartz@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-swipeable@^4.0.0",
    "scope": null,
    "escapedName": "react-swipeable",
    "name": "react-swipeable",
    "rawSpec": "^4.0.0",
    "spec": ">=4.0.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-image-gallery"
  ],
  "_resolved": "https://registry.npmjs.org/react-swipeable/-/react-swipeable-4.0.1.tgz",
  "_shasum": "2cb3a04a52ccebf5361881b30e233dc13ee4b115",
  "_shrinkwrap": null,
  "_spec": "react-swipeable@^4.0.0",
  "_where": "C:\\Users\\Greye\\Desktop\\Proyecto\\beBat\\node_modules\\react-image-gallery",
  "author": {
    "name": "Josh Perez",
    "email": "josh@goatslacker.com"
  },
  "bugs": {
    "url": "https://github.com/dogfessional/react-swipeable/issues"
  },
  "dependencies": {
    "prop-types": "^15.5.8"
  },
  "description": "Swipe bindings for react",
  "devDependencies": {
    "babel-cli": "^6.3.17",
    "babel-jest": "^18.0.0",
    "babel-plugin-transform-object-rest-spread": "^6.3.13",
    "babel-preset-es2015-loose": "^6.1.4",
    "babel-preset-react": "^6.3.13",
    "enzyme": "^2.7.0",
    "eslint": "^3.12.2",
    "eslint-config-airbnb": "^13.0.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.8.0",
    "jest": "^18.1.0",
    "react": "^15.5.0",
    "react-addons-test-utils": "^15.5.0",
    "react-dom": "^15.5.0",
    "react-test-renderer": "^15.5.0"
  },
  "directories": {},
  "dist": {
    "shasum": "2cb3a04a52ccebf5361881b30e233dc13ee4b115",
    "tarball": "https://registry.npmjs.org/react-swipeable/-/react-swipeable-4.0.1.tgz"
  },
  "files": [
    "lib",
    "src"
  ],
  "gitHead": "3eefe79ccda16b64203d5287437f2cd8c7a179a5",
  "homepage": "https://github.com/dogfessional/react-swipeable#readme",
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/__tests__/helpers/"
    ]
  },
  "keywords": [
    "swipe",
    "flick",
    "swipeable",
    "react",
    "web",
    "mobile",
    "ios",
    "android",
    "react-component"
  ],
  "license": "MIT",
  "main": "lib/Swipeable.js",
  "maintainers": [
    {
      "name": "goatslacker",
      "email": "josh@goatslacker.com"
    },
    {
      "name": "hartzis",
      "email": "brianhartz@gmail.com"
    }
  ],
  "name": "react-swipeable",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.0 || ^15.0.0-0 || ^16.0.0-0"
  },
  "readme": "# Swipeable [![npm version](https://img.shields.io/npm/v/react-swipeable.svg?style=flat-square)](https://www.npmjs.com/package/react-swipeable) [![npm downloads](https://img.shields.io/npm/dm/react-swipeable.svg?style=flat-square)](https://www.npmjs.com/package/react-swipeable)\nReact swipe component - Swipe bindings for react\n\n[Demo](http://dogfessional.github.io/react-swipeable/)\n\n### Install\n```console\n$ npm install --save react-swipeable\n```\n\n### Use\n\n```js\nimport Swipeable from 'react-swipeable'\n\nclass SwipeComponent extends React.Component {\n\n  swiping(e, deltaX, deltaY, absX, absY, velocity) {\n    console.log('Swiping...', e, deltaX, deltaY, absX, absY, velocity)\n  }\n\n  swiped(e, deltaX, deltaY, isFlick, velocity) {\n    console.log('Swiped...', e, deltaX, deltaY, isFlick, velocity)\n  }\n\n  render() {\n    return (\n      <Swipeable\n        onSwiping={this.swiping}\n        onSwiped={this.swiped} >\n          You can swipe here!\n      </Swipeable>\n    )\n  }\n}\n```\nreact-swipeable generates a React element(`<div>` by default) under the hood and binds touch events to it which in turn are used to fire the `swiped` and `swiping` props.\n\n## Props / Config Options\n\n### Event Props\n\n**`onSwiping`**, **`onSwipingUp`**, **`onSwipingRight`**, **`onSwipingDown`**, **`onSwipingLeft`**, are called with the event\nas well as the absolute delta of where the swipe started and where it's currently at. These constantly fire throughout touch events.\n\n**`onSwiping`** in addition to the swipe delta, `onSwiping` also returns the current absolute X and Y position, as well as the current velocity of the swipe. `this.props.onSwiping(e, deltaX, deltaY, absX, absY, velocity)`\n\n**`onSwipedUp`**, **`onSwipedRight`**, **`onSwipedDown`**, **`onSwipedLeft`** are called with the event\nas well as the x distance, + or -, from where the swipe started to where it ended. These only fire at the end of a touch event.\n\n**`onSwiped`** is called with the event, the X and Y delta, whether or not the event was a flick, and the current velocity of the swipe. `this.props.onSwiped(e, x, y, isFlick, velocity)`\n\n**`onTap`** is called with the onTouchEnd event when the element has been tapped. `this.props.onTap(e)`\n\n### Configuration Props\n\n**`flickThreshold`** is a number (float) which determines the max velocity of a swipe before it's considered a flick. The default value is `0.6`.\n\n**`delta`** is the amount of px before we start firing events. Also affects how far `onSwipedUp`, `onSwipedRight`, `onSwipedDown`, and `onSwipedLeft` need to be before they fire events. The default value is `10`.\n\n**`preventDefaultTouchmoveEvent`** is whether to prevent the browser's [touchmove](https://developer.mozilla.org/en-US/docs/Web/Events/touchmove) event.  Sometimes you would like the target to scroll natively.  The default value is `false`. [Chrome 56 and later, warning with preventDefault](#chrome-56-and-later-warning-with-preventdefault)\n * **Notes** `e.preventDefault()` is only called when `preventDefaultTouchmoveEvent` is `true` **and** the user is swiping in a direction that has an associated directional `onSwiping` or `onSwiped` prop.\n   * Example: user is swiping right with `<Swipable onSwipedRight={this.userSwipedRight} preventDefaultTouchmoveEvent={true} >` then `e.preventDefault()` will be called, but if user was swiping left `e.preventDefault()` would **not** be called.\n   * Please experiment with [example](http://dogfessional.github.io/react-swipeable/) to test `preventDefaultTouchmoveEvent`.\n\n**`stopPropagation`** automatically calls stopPropagation on all 'swipe' events. The default value is `false`.\n\n**`nodeName`** is a string which determines the html element/node that this react component binds its touch events to then returns. The default value is `'div'`.\n\n**`trackMouse`** will allow mouse 'swipes' to be tracked(click, hold, move, let go). See [#51](https://github.com/dogfessional/react-swipeable/issues/51) for more details. The default value is `false`.\n\n**None of the props are required.**\n### PropType Definitions\n\n#### Event Props:\n```\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onSwipingUp: PropTypes.func,\n  onSwipingRight: PropTypes.func,\n  onSwipingDown: PropTypes.func,\n  onSwipingLeft: PropTypes.func,\n  onSwipedUp: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedDown: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  onTap: PropTypes.func,\n```\n#### Config Props:\n```\n  flickThreshold: PropTypes.number, // default: 0.6\n  delta: PropTypes.number, // default: 10\n  preventDefaultTouchmoveEvent: PropTypes.bool, // default: false\n  stopPropagation: PropTypes.bool, // default: false\n  nodeName: PropTypes.string // default: div\n  trackMouse: PropTypes.bool, // default: false\n```\n\n### Chrome 56 and later, warning with preventDefault\nWhen this library tries to call `e.preventDefault()` in Chrome 56+ a warning is logged:\n`Unable to preventDefault inside passive event listener due to target being treated as passive.`\n\nThis warning is because this [change](https://developers.google.com/web/updates/2017/01/scrolling-intervention) to Chrome 56+ and the way the synthetic events are setup in reactjs.\n\nIf you'd like to prevent all scrolling/zooming within a `<Swipeable />` component you can pass a `touchAction` style property equal to `'none'`, [example](https://github.com/dogfessional/react-swipeable/blob/master/examples/app/Main.js#L143). Chrome's recommendation for  [reference](https://developers.google.com/web/updates/2017/01/scrolling-intervention).\n\n```\n<Swipeable style={{touchAction: 'none'}} />\n```\n\nFollow reacts handling of this issue here: [facebook/react#8968](https://github.com/facebook/react/issues/8968)\n\n## Development\n\nInitial set up, run `npm install`.\n\nMake changes/updates to the `src/Swipeable.js` file.\n\nBefore creating a PR please run `npm test` to make sure the tests and lint pass. Add tests if PR adds functionality please.\n\n#### Test changes/updates with the examples\n\ncd into `examples` directory, then `npm install` within that directory, and finally `npm start`.\n\nAfter the server starts you can then view the examples page with your changes at `http://localhost:3000`.\n\nYou can now make updates/changes to `src/Swipeable.js` and webpack will rebuild, then reload the page so you can test your changes!\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/dogfessional/react-swipeable.git"
  },
  "scripts": {
    "build:lib": "babel src --out-dir lib --ignore __tests__ --no-comments",
    "build:publish:examples": "./scripts/build_gh_pages.sh",
    "lint": "eslint .",
    "prepublish": "npm run build:lib",
    "test": "npm run test:unit && npm run lint",
    "test:unit": "jest"
  },
  "version": "4.0.1"
}
